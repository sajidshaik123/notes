{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shaik\\\\satya\\\\react\\\\frontEnd-SlamBook\\\\src\\\\components\\\\ConectionCheck.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConectionCheck = () => {\n  _s();\n  const [status, setStatus] = useState('');\n  useEffect(() => {\n    const checkStatus = async () => {\n      try {\n        const response = await axios.get('http://localhost:8080/friends/api/status');\n        setStatus(response.data);\n      } catch (error) {\n        console.error('Error checking status:', error);\n        setStatus('please run the java application :)');\n      }\n    };\n    checkStatus();\n  }, []); // Empty dependency array ensures that the effect runs once when the component mounts\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"java Applicatio Status: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge bg-danger\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(ConectionCheck, \"n83CR3Lja6Jhpo68KQMsYUAIUVk=\");\n_c = ConectionCheck;\nexport default ConectionCheck;\nvar _c;\n$RefreshReg$(_c, \"ConectionCheck\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ConectionCheck","_s","status","setStatus","checkStatus","response","get","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shaik/satya/react/frontEnd-SlamBook/src/components/ConectionCheck.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst ConectionCheck = () => {\r\n    const [status, setStatus] = useState('');\r\n\r\n    useEffect(() => {\r\n        const checkStatus = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:8080/friends/api/status');\r\n                setStatus(response.data);\r\n            } catch (error) {\r\n                console.error('Error checking status:', error);\r\n                setStatus('please run the java application :)');\r\n            }\r\n        };\r\n        checkStatus();\r\n    }, []); // Empty dependency array ensures that the effect runs once when the component mounts\r\n    return (\r\n        <div className=\"container mt-5\">     \r\n           <h4>java Applicatio Status: <span className=\"badge bg-danger\">{status}</span></h4 >         \r\n        </div>\r\n    );\r\n};\r\nexport default ConectionCheck;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ,MAAMQ,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,0CAA0C,CAAC;QAC5EH,SAAS,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9CL,SAAS,CAAC,oCAAoC,CAAC;MACnD;IACJ,CAAC;IACDC,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EACR,oBACIL,OAAA;IAAKW,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC5BZ,OAAA;MAAAY,QAAA,GAAI,0BAAwB,eAAAZ,OAAA;QAAMW,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAET;MAAM;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjF,CAAC;AAEd,CAAC;AAACd,EAAA,CApBID,cAAc;AAAAgB,EAAA,GAAdhB,cAAc;AAqBpB,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}